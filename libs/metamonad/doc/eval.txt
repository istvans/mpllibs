//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2012.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

eval
====
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class Exp>
struct eval
{
  // unspecified
};
--------------------------------------


Description
-----------

Metafunction adding an extra level of evaluation to a value. When the
metafunction is evaluated, it returns +Exp::type::type+.

Header
------

--------------------------------------
#include <mpllibs/metamonad/eval.hpp>
--------------------------------------

Expression semantics
--------------------

For any +t+ type:

--------------------------------------
eval<t>::type
--------------------------------------

is equivalent to

--------------------------------------
t::type::type
--------------------------------------

Example
-------

--------------------------------------
template <class C, class T, class F>
struct eval_if : eval<boost::mpl::if_<C, T, F>> {};
--------------------------------------

include::copyright[]

link:reference.html[[up]]



