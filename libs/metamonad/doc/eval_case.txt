//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2012.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

eval_case
=========
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class Exp, class C1, ..., class Cn>
struct eval_case
{
  // unspecified
};
--------------------------------------


Description
-----------

This is similar to link:case_.html[+case_+], but it evaluates the selected
expression.

Header
------

--------------------------------------
#include <mpllibs/metamonad/eval_case.hpp>
--------------------------------------

Expression semantics
--------------------

For any +n > 0+, +c1+, ..., +cn+ and +e+ classes

--------------------------------------
eval_case<e, c1, ..., cn>
--------------------------------------

is equivalent to

--------------------------------------
eval_syntax<case_<e, c1, ..., cn>>
--------------------------------------

Example
-------

--------------------------------------
using namespace mpllibs::metamonad::name;

template <class A>
struct maybe_something :
  boost::mpl::if_<
    typename boost::is_same<A, int>::type,
    just<double>,
    nothing
  >
{};

typedef
  eval_case< maybe_something<int>::type,
    matches_c<just<var<x>>, returns<x>>,
    matches_c<nothing,      nothing>,
    matches_c<_,            nothing>
  >::type
  this_is_double;
--------------------------------------

include::copyright[]

link:reference.html[[up]]



