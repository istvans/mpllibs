//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2013.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

box
===
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class T>
struct box
{
  // unspecified
};
--------------------------------------


Description
-----------

It can be used to box values that are not nullary template metafunctions. Boxed
values are nullary template metafunctions evaluating to themselves, thus they
can be passed around in lazy template metaprograms.

The content of +box+ is left untouched by link:lazy.html[+lazy+] and is not
subject to variable substitution in let, lambda and do expressions.

The tag of boxed values is +box_tag+. Boxed values can be compared with
+boost::mpl::equal_to+ and considered equal when they wrap the same type.

Header
------

--------------------------------------
#include <mpllibs/metamonad/box.hpp>
--------------------------------------

Example
-------

--------------------------------------
typedef box<int> boxed_int;
--------------------------------------

include::copyright[]

link:reference.html[[up]]



