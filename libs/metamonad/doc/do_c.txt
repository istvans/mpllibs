//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2013.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

do_c
====
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class MonadTag, class Step1, ..., class Stepn>
struct do_c
{
  // unspecified...
};
--------------------------------------


Description
-----------

The same as link:do_.html[+do_+], but the steps are angle-bracket expressions
and not syntaxes.

Header
------

--------------------------------------
#include <mpllibs/metamonad/do_c.hpp>
--------------------------------------

Expression semantics
--------------------

For any +n > 0+ and +m+, +s1+ ... +sn+ classes

--------------------------------------
do_c<m, s1, ..., sn>::type
--------------------------------------

is equivalent to

--------------------------------------
do_<m, syntax<s1>, ..., syntax<sn>>::type
--------------------------------------

Example
-------

--------------------------------------
using boost::mpl::int_;

using namespace mpllibs::metamonad::name;

do_c<exception_tag,
  set<r, may_fail1<int_<13>>,
  may_fail2<r>
>
--------------------------------------

include::copyright[]

link:reference.html[[up]]



