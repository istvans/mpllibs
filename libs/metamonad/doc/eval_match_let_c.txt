//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2013.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

eval_match_let_c
================
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class Pattern, class Exp, class Body>
struct eval_match_let_c
{
  // unspecified
};
--------------------------------------


Description
-----------

The same as link:eval_match_let.html[+eval_match_let+], but +Pattern+ and +Body+
are angle-bracket expressions and not syntaxes.

Header
------

--------------------------------------
#include <mpllibs/metamonad/eval_match_let_c.hpp>
--------------------------------------

Expression semantics
--------------------

For any +p+, +e+ and +b+ classes

--------------------------------------
eval_match_let_c<p, e, b>::type
--------------------------------------

is equivalent to

--------------------------------------
eval_match_let<syntax<p>, e, syntax<b>>::type
--------------------------------------

Example
-------

--------------------------------------
using namespace mpllibs::metamonad::name;

template <class A>
struct maybe_something :
  boost::mpl::if_<
    typename boost::is_same<A, int>::type,
    just<returns<double>>,
    nothing
  >
{};

typedef
  eval_match_let_c<
    just<var<x>>, maybe_something<int>::type,
    x
  >::type
  this_is_double;
--------------------------------------

include::copyright[]

link:reference.html[[up]]



