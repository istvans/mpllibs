//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2012.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

monad_plus
==========
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class MonadTag>
struct monad_plus;
  // Requires:
  //   struct mzero;
  //   struct mplus { template <class, class> struct apply; };
--------------------------------------


Description
-----------

This is a typeclass for monad pluses. A monad plus represents a monad that
satisfies the expectations of a link:monoid.html[monoid]. The indentity value
is called +mzero+, the operation is called +mplus+.

Header
------

--------------------------------------
#include <mpllibs/metamonad/monad_plus.hpp>
--------------------------------------

Example
-------

--------------------------------------
using boost::mpl;

struct list_tag;

template <>
struct monad_plus<list_tag>
{
  typedef list<> mzero;
  
  struct mplus
  {
    template <class A, class B>
    struct apply : insert_range<A, typename end<A>::type, B> {};
  };
};
--------------------------------------

include::copyright[]

link:reference.html[[up]]



