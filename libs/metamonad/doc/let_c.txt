//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2013.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

let_c
=====
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class Name, class Exp, class Body>
struct let_c
{
  // unspecified
};
--------------------------------------


Description
-----------

The same as link:let.html[+let+], but +Exp+ and +Body+ are angle-bracket
expressions and not syntaxes.

Header
------

--------------------------------------
#include <mpllibs/metamonad/let_c.hpp>
--------------------------------------

Expression semantics
--------------------

For any +n+, +e+ and +b+ classes

--------------------------------------
let_c<n, e, b>::type
--------------------------------------

is equivalent to

--------------------------------------
let<n, syntax<e>, syntax<b>>::type
--------------------------------------

Example
-------

--------------------------------------
using boost::mpl::times;
using boost::mpl::plus;
using boost::mpl::int_;

using namespace mpllibs::metamonad::name;

template <class N>
struct my_metafunction :
  eval_syntax<
    let_c<
      x, plus<n, int_<13>>,
      times<x, x>
    >
  >
{};
--------------------------------------

include::copyright[]

link:reference.html[[up]]



