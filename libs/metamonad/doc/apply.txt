//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2013.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

apply
=====
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class F, class T1, ..., class Tn>
struct apply
{
  // unspecified
};
--------------------------------------


Description
-----------

Lazy wrapper for +F::apply<T1, ..., Tn>+.

Header
------

--------------------------------------
#include <mpllibs/metamonad/apply.hpp>
--------------------------------------

Expression semantics
--------------------

For any +n+ and +f+ , +t1+, ..., +tn+ types

--------------------------------------
apply<f, t1, ..., tn>::type
--------------------------------------

is equivalent to

--------------------------------------
f::type::apply<t1::type, ..., tn::type>::type
--------------------------------------

Example
-------

--------------------------------------
using namespace mpllibs::metamonad::name;

apply<lambda_c<a, b, mpl::plus<a, b>>, mpl::int_<1>, mpl::int_<2>>::type
--------------------------------------

include::copyright[]

link:reference.html[[up]]



