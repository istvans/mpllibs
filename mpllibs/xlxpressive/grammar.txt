Copyright Istvan Siroki (stevesiroki@gmail.com)  2012 - 2013.
Distributed under the Boost Software License, Version 1.0.
   (See accompanying file LICENSE_1_0.txt or copy at
         http://www.boost.org/LICENSE_1_0.txt)

Possible scenarios:
1. Tranform normal regular expression -given as a string- into
   expression template to make its user interface nicer and more
   natural. Report error, if tranformation isn't possible i.e. the
   regular expression is not valid.
2. Validate regex and use the run-time regex interface to 'compile' the
   regular expression. This isn't the best approach, because we want
   compile-time meta-compilation and to not introduce overhead on
   runtime.

Options separated by '|' are in order of precedence i.e. if the first
clause matches the others aren't evaluated at all

reg_exp ::= seq ('|' seq)*
seq ::= unary_item*
unary_item ::= item (('*'|'+'|'?'|repeat) '?'?)?
repeat ::= '{' (number ',' number|',' number| number ',') '}'
item ::= bos|eos|any|bracket_exp|group|set_item
set_item ::= bschar|number|letter|non_alphabet
non_alphabet ::= space|','|';'|':'|'='|'~'|'<'|'>'|'-'|'_'|'!'|'@'|'#'|'%'|'&'
letter ::= 'A'-'Z'|'a'-'z'
number ::= '0'-'9'
bos ::= '^'
eos ::= '$'
any ::= '.'
bracket_exp ::= '(' (reg_exp|qexp) ')'
qexp ::= '?' (icase|keep|before|not_before|after|not_after|mark_tag_create|mark_tag_use) reg_exp
icase            ::= "i:"
keep             ::= '>'
before           ::= '='
not_before       ::= '!'
after            ::= "<="
not_after        ::= "<!"
mark_tag_create  ::= "P<" name '>'
mark_tag_use     ::= "P=" name
name             ::= letter+
bschar ::= '\' (bs_backslash|bs_back_ref|bs_boundary|bs_digit|bs_word|bs_space|bs_new_line)
bs_backslash ::= '\'
bs_back_ref  ::= number
bs_boundary  ::= 'b'|not_bs_boundary
not_bs_boundary ::= 'B'
bs_digit     ::= 'd'|not_bs_digit
not_bs_digit ::= 'D'
bs_word      ::= 'w'|not_bs_word
not_bs_word  ::= 'W'
bs_space     ::= 's'|not_bs_space
not_bs_space ::= 'S'
bs_new_line  ::= "r\n"|'n'
group ::= '[' (char_group|'^'? set)
set ::= (range_exp|set_item)+ ']'
range_exp ::= number set_num|letter set_abc|set_item
set_num     ::= '-' num_range|set_item
num_range   ::= number
set_abc     ::= '-' abc_range|set_item
abc_range   ::= letter
spaces ::= space*
space ::= ' '|'\n'|'\t'|'\r'
char_group  ::= ':' ('a' set_a|'b' set_b|'c' set_c|'d' set_d|'g' set_g|'l' set_l|'p' set_p|'s' set_s|'u' set_u|'x' set_x|set)
set_a       ::= 'l' set_al|set
set_al      ::= 'n' set_aln|'p' set_alp|set
set_aln     ::= 'u' set_alnu|set
set_alnu    ::= 'm' set_alnum|set
set_alnum   ::= ':' set_alnumT|set
set_alnumT  ::= ']'
set_alp     ::= 'h' set_alph|set
set_alph    ::= 'a' set_alpha|set
set_alpha   ::= ':' set_alphaT|set
set_alphaT  ::= ']'
set_b       ::= 'l' set_bl|set
set_bl      ::= 'a' set_bla|set
set_bla     ::= 'n' set_blan|set
set_blan    ::= 'k' set_blank|set
set_blank   ::= ':' set_blankT|set
set_blankT  ::= ']'
set_c       ::= 'n' set_cn|set
set_cn      ::= 't' set_cnt|set
set_cnt     ::= 'r' set_cntr|set
set_cntr    ::= 'l' set_cntrl|set
set_cntrl   ::= ':' set_cntrlT|set
set_cntrlT  ::= ']'
set_d       ::= 'i' set_di|set
set_di      ::= 'g' set_dig|set
set_dig     ::= 'i' set_digi|set
set_digi    ::= 't' set_digit|set
set_digit   ::= ':' set_digitT|set
set_digitT  ::= ']'
set_g       ::= 'r' set_gr|set
set_gr      ::= 'a' set_gra|set
set_gra     ::= 'p' set_grap|set
set_grap    ::= 'h' set_graph|set
set_graph   ::= ':' set_graphT|set
set_graphT  ::= ']'
set_l       ::= 'o' set_lo|set
set_lo      ::= 'w' set_low|set
set_low     ::= 'e' set_lowe|set
set_lowe    ::= 'r' set_lower|set
set_lower   ::= ':' set_lowerT|set
set_lowerT  ::= ']'
set_p       ::= 'r' set_pr|'u' set_pu|set
set_pr        ::= 'i' set_pri|set
set_pri       ::= 'n' set_prin|set
set_prin      ::= 't' set_print|set
set_print     ::= ':' set_printT|set
set_printT    ::= ']'
set_pu        ::= 'n' set_pun|set
set_pun       ::= 'c' set_punc|set
set_punc      ::= 't' set_punct|set
set_punct     ::= ':' set_punctT|set
set_punctT    ::= ']'
set_s       ::= 'p' set_sp|set
set_sp      ::= 'a' set_spa|set
set_spa     ::= 'c' set_spac|set
set_spac    ::= 'e' set_space|set
set_space   ::= ':' set_spaceT|set
set_spaceT  ::= ']'
set_u       ::= 'p' set_up|set
set_up      ::= 'p' set_upp|set
set_upp     ::= 'e' set_uppe|set
set_uppe    ::= 'r' set_upper|set
set_upper   ::= ':' set_upperT|set
set_upperT  ::= ']'
set_x       ::= 'x' set_xd|set
set_xd      ::= 'd' set_xdi|set
set_xdi     ::= 'i' set_xdig|set
set_xdig    ::= 'g' set_xdigi|set
set_xdigi   ::= 'i' set_xdigit|set
set_xdigit  ::= ':' set_xdigitT|set
set_xdigitT ::= ']'

